---
layout: post
title:  "01 Hello World!"
date:   2018-04-17 00:00:00 +0900

---

こまかいことは後回しにして、とにかくプログラミングをやってみましょう。

1. 開発ツールを確認する
2. 開発ツールを準備する
3. 開発の流れを確認する
4. とにかく書いてみる

## 開発ツールを確認する
プログラミングに必要なもの

- 心構え
- テキストエディタ
- コマンドライン
- コンパイラ

### プログラミングへの心構え

- C言語を覚える近道は、コードを見て、自分で書いて、実行してみること。
- サンプルコードそのまま写すだけでなく、自分でいじって遊んでみよう。

### テキストエディタ

- コンピューターを使って書くかんたんな文書やソースコードなどを、 **テキスト** という。
- テキストを編集（edit）するものを、 **テキストエディタ** という。
- 今回の講座では、TeraPadを使うが、自分の好みに応じて変えても良い。

### コマンドライン

- コンピューターに、プログラムの作成や実行などかんたんな支持を伝えるには、 **コマンドライン** というものを使う。
- Windowsなら、コマンドプロンプト。
- 今回は、TeraTermを利用して実習用サーバー(jocalc1)にログインする。

### コンパイラ

- 人が理解できるC言語のソースコードを、コンピュータが理解できる機械語にするものを、コンパイラという。
- 今回は、GCC(GNU Compiler Collection)という、UNIX系システムでもっともメジャーなコンパイラを使用する。

## 開発ツールを準備する

### TeraPad

- 文字コードの設定

### TeraTerm

- ログインしてみる
- 文字コードの設定

## 開発の流れを確認する
開発の流れ

- コーディング
  * ソースコードを作成すること
- コンパイル
  * ソースコードを機械語に翻訳すること
- 実行
  * プログラムを走らせること

## とにかく書いてみる

### TeraTermを使って実習用サーバーにログイン

- デスクトップにあるTeraTermのアイコンをクリックして、TeraTermを起動する。
- ログイン
- 文字コードなど

### プログラミング用ディレクトリの作成

- ディレクトリとは、Windowsでいうフォルダのこと。

{% highlight shell %}
$ mkdir softech_prog
$ cd softech_prog
{% endhighlight %}

### 最初のプログラムを作ってみる

- これからC言語のソースコードを作成していく。
- ソースコードは、C言語のルールにしたがって書かれたコンピュータへの指示書のようなもの。
- テキストエディタを使って、ソースコードを書く。
- あとから読みやすいコードを書くよう心がける。
  * 処理のまとまりごとに空行をあける。
  * インデント（字下げ）

以下のソースコードをエディタを使って入力し、保存しよう。
ファイル名は、 **hello.c** とする。

{% highlight c linenos %}
#include <stdio.h>

int main(void) {
        printf("Hello World!\n");
        return 0;
}
{% endhighlight %}


### コンパイルして実行してみる

- gccというコンパイラを使ってコンパイルする。
  * プログラムができる
- ./helloでプログラムを実行
- 以下のコマンドを、TeraTermを通じてコマンドラインに入力する。（$マークは無視する。

{% highlight shell %}
$ gcc -o hello hello.c
$ ./hello
{% endhighlight %}

## 練習問題

1. printf()の中身を好きな文字列に変えてみよう。

